<?php
class Generator_model extends CI_Model {
    public function __construct()
    {
        parent::__construct();
    }
	
	/*
	 * Récupère la liste des promos du jour, avec des infos "étendues"
	 * @param :
	 *  - os_id {int}
	 *  - date au format mySql (YYYY-MM-DD)
	 */
	public function get_promos($os_id, $date)
	{
		$this->load->model('app_model');
		$this->load->model('promo_model');
		
		$this->db->select('*')->from('admin_app AS app')->join('admin_promo AS prm', 'app.app_id = prm.prm_app_id')->where('app_os_id', $os_id)->where("prm.prm_date_debut <= '$date' AND prm.prm_date_fin >= '$date'")->order_by('app.app_rating_count', 'desc');
		$query = $this->db->get();
		
		return $query->result_array();
	}
	/*
	 * Récupère le top gratuit du jour :
	 * on sélectionne les applis gratuites de base, puis les applis gratuites par promo
	 * enlève l'intersection
	 */
	public function get_top_free($os_id, $date)
	{
		$this->load->model('app_model');
		$this->load->model('promo_model');
		
		$this->db->select('*')->from('admin_app AS app')->where('app.app_os_id', $os_id)->order_by('app.app_rating_count', 'desc')->where('app.app_price', '0');
		$query = $this->db->get();
		$free_forever = $query->result_array();	
		
		// les applis gratuites car en promo
		// l'ordre est important pour le merge est après
		$this->db->select('*')->from('admin_app AS app')->join('admin_promo AS prm', 'app.app_id = prm.prm_app_id')->where('app.app_os_id', $os_id)->where("prm.prm_date_debut <= '$date' AND prm.prm_date_fin >= '$date'")->order_by('app.app_rating_count', 'desc')->where('prm.prm_price', '0');
		$query = $this->db->get();
		$free_today = $query->result_array();	
		
		// on fusionne les deux tableaux
		// l'ordre des requêtes est important : si une appli est gratuite et gratuite en promo, on gardera les valeurs additionelles (text_discount...)
		return array_merge($free_forever, $free_today);
	}
	/*
	 * Récupère le top payant du jour :
	 * on sélectionne les applis payantes de base, puis les applis gratuites par promo, les retire de la liste
	 */
	public function get_top_paid($os_id, $date)
	{
		$this->load->model('app_model');
		$this->load->model('promo_model');
		
		// les applis payantes
		$this->db->select('*')->from('admin_app AS app')->where('app_os_id', $os_id)->order_by('app.app_rating_count', 'desc')->where('app.app_price != 0');
		$query = $this->db->get();
		$paid_forever = $query->result_array();	
		
		// les applis gratuites car en promo
		// l'ordre est important pour le merge est après
		$this->db->select('*')->from('admin_app AS app')->join('admin_promo AS prm', 'app.app_id = prm.prm_app_id')->where('app.app_os_id', $os_id)->where("prm.prm_date_debut <= '$date' AND prm.prm_date_fin >= '$date'")->order_by('app.app_rating_count', 'desc')->where('prm.prm_price', '0');
		$query2 = $this->db->get();
		$free_today = $query2->result_array();	
		
		// on fait la différence entre les deux tableaux : un peu relou
		$all_apps = array_intersect($paid_forever, $free_today); // on fusionne tout
		return array_filter($all_apps, "is_not_free"); // et maintenant regarde s'il n'y a pas une promo à 0
	}

}
/* EOF */
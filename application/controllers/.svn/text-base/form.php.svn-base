<?php
class Form extends CI_Controller {
	/*
	 * Cette classe reçoit des hits de l'extérieur, elle n'est
	 * pas faire pour l'admin, c'est le rôle de newsletter
	 */
	
	function index()
	{
		die('Direct access forbidden');
	}
	
	/*
	 * On reçoit les infos du formulaire de contact
	 * on nettoie et stock en base
	 */
	function contact()
	{
		$this->load->model('form_model');
		
		// validation des données
		$this->form_validation->set_rules('prenom', 'prenom', 'required|max_length[255]');
		$this->form_validation->set_rules('nom', 'nom', 'required|max_length[255]');
		$this->form_validation->set_rules('email', 'e-mail', 'required|valid_email|max_length[255]');
		$this->form_validation->set_rules('message', 'message', 'required');
		
		if ($this->form_validation->run() == TRUE)
		{
			$query_data = array(
				'name' => $this->input->post('nom'),
				'surname' => $this->input->post('prenom'),
				'email' => $this->input->post('email'),
				'message' => $this->input->post('message')
			);
			$this->form_model->add_contact($query_data);
						
			exit(0); // on est content
		}
		else
		{
			die('invalid data'); // rien à faire, vaquero
		}		
	}
	
	/*
	 * On reçoit les infos du formulaire de contact
	 * on nettoie et stock en base
	 */
	function bonus()
	{
		$this->load->model('form_model');
		
		// validation des données
		$this->form_validation->set_rules('prenom', 'prenom', 'required|max_length[255]');
		$this->form_validation->set_rules('nom', 'nom', 'required|max_length[255]');
		$this->form_validation->set_rules('email', 'e-mail', 'required|valid_email|max_length[255]');
		$this->form_validation->set_rules('maj', 'recevoir les mises a jour', 'is_numeric|max_length[11]');
		
		if ($this->form_validation->run() == TRUE)
		{
			$query_data = array(
				'name' => $this->input->post('nom'),
				'surname' => $this->input->post('prenom'),
				'email' => $this->input->post('email'),
				'update' => $this->input->post('maj')
			);
			$this->form_model->add_bonus($query_data);
						
			exit(0); // on est content
		}
		else
		{
			die('invalid data'); // rien à faire, vaquero
		}		
	}

	/*
	 * On reçoit les infos de quelqu'un qui veut s'inscrire à la newsletter
	 */
	function newsletter()
	{
		$this->load->model('form_model');
		
		echo $this->input->post('newsletter');
		echo $this->input->post('email');
		
		// validation des données
		$this->form_validation->set_rules('email', 'e-mail', 'required|max_length[255]|valid_email');
		$this->form_validation->set_rules('newsletter', 's\'inscrire', 'required|max_length[1]|is_numeric');
		
		if ($this->form_validation->run() == TRUE)
		{
			$action = $this->input->post('newsletter');
			
			// on "constraint" les valeurs d'actions qu'on peut avoir
			if ($action == '0')
			{
				// désinscription
				$query_data = array(
					'email' => $this->input->post('email'), // le filtrage XSS est automatique
					'subscribe' => 0
				);
				$this->form_model->unsubscribe_newsletter($query_data);
			}
			else if ($action == '1')
			{
				// inscription
				$query_data = array(
					'email' => $this->input->post('email'),
					'subscribe' => 1
				);
				$this->form_model->subscribe_newsletter($query_data);
			}
			
			exit(0); // on est content
		}
		else
		{
			die('invalid data'); // rien à faire, vaquero
		}
	}

}

/* EOF */
<?php
class App extends CI_Controller {
	private $_os_selected;	

	public function index()
	{
		$this->load->model('app_model');
		$data['oses'] = $this->_load_os(); // pour le drop-down de choix de l'os
		$data['apps'] = $this->app_model->get_apps($this->_os_selected);
		$data['page'] = 'app/app_view';
		
		// récupère la liste des applis, les affiche
		$this->load->view('container', $data);
	}
	
	// affiche les détails (tous)
	// TODO : vue à améliorer
	public function detail($id)
	{
		$this->load->model('app_model');
		$data['details'] = $this->app_model->get_app($id);
		$data['page'] = 'app/app_view_detail';
		
		$this->load->view('container', $data);
	}

	// AJOUT
	// étape 1 : on rentre l'os et l'id
	public function add_id()
	{
		$this->load->model('os_model');
		$this->load->model('app_model');
		$data['oses'] = $this->_load_os(TRUE); // pour le drop-down de choix de l'os, on ne veut pas le choix 'all'
		$data['os_id'] = $this->_os_selected;
		
		// validation des données
		$this->form_validation->set_rules('os_id', 'ID OS', 'required');
		$this->form_validation->set_rules('store_id', 'ID du store', ''); // on peut ne rien avoir (auquel cas il faudra tout rentrer à la main)
		
		if ($this->form_validation->run() === TRUE)
		{
			// on nettoie les infos qu'on va envoyer au prochain formulaire
			$data['os_id'] = $this->input->post('os_id');
			$data['store_id'] = $this->input->post('store_id');
			
			// on vérifie si l'appli n'existe pas déjà
			if ($this->app_model->exist_app($data['os_id'], $data['store_id']) === TRUE)
			{
				$this->session->set_flashdata('alert', 'Cette application existe d&eacute;j&agrave; !'); // les autres fonctions n'échappent pas correctement
				redirect('app/');
			}
			
			// récupère les infos du store
			$data = $this->os_model->get_store_details($data);
			
			// on envoie sur le deuxième formulaire
			$this->session->set_flashdata('data', base64_encode(serialize($data))); // les autres fonctions n'échappent pas correctement
			redirect('app/add/');
		}
		else
		{
			$data['page'] = 'app/app_add_id_view';
			$this->load->view('container', $data);
		}
	}
	// étape 2
	public function add()
	{
		$this->load->model('app_model');
		$data['oses'] = $this->_load_os(TRUE); // pour le drop-down de choix de l'os, on ne veut pas le choix 'all'
		
		$data = unserialize(base64_decode($this->session->flashdata('data'))); // on récupère les autres infos de la page précédente
		
		// validation des données
		$this->form_validation->set_rules('os_id', 'ID OS', 'required|is_numeric');
		$this->form_validation->set_rules('store_id', 'ID du store', 'required');
		$this->form_validation->set_rules('link', 'Lien', 'required');
		$this->form_validation->set_rules('title', 'Nom', 'required|min_length[1]');
		$this->form_validation->set_rules('editor', 'Editeur', 'required');
		$this->form_validation->set_rules('version', 'Version', 'required');
		$this->form_validation->set_rules('price', 'Prix 3', 'required|is_numeric');
		$this->form_validation->set_rules('rating', 'Note', 'required|is_numeric');
		$this->form_validation->set_rules('rating_count', 'Nombre de votes', 'required|is_numeric');
		$this->form_validation->set_rules('description', 'Description', 'required|min_length[50]');
		$this->form_validation->set_rules('short_desc', 'Description courte', 'required');
		$this->form_validation->set_rules('thumbnail', 'Miniature', 'required|min_length[1]');
		$this->form_validation->set_rules('picture', 'Image', 'required|min_length[1]');
		$this->form_validation->set_rules('screen_1', 'Capture 1', 'required|min_length[1]');
		$this->form_validation->set_rules('screen_2', 'Capture 2', 'required');
		$this->form_validation->set_rules('screen_3', 'Capture 3', 'required');
		
		if ($this->form_validation->run() == TRUE)
		{
			$query_data = array(
				'app_os_id' => $this->input->post('os_id'),
				'app_store_id' => $this->input->post('store_id'),
				'app_link' => $this->input->post('link'),
				'app_title' => $this->input->post('title'),
				'app_editor' => $this->input->post('editor'),
				'app_version' => $this->input->post('version'),
				'app_price' => $this->input->post('price'),
				'app_rating' => $this->input->post('rating'),
				'app_rating_count' => $this->input->post('rating_count'),
				'app_description' => $this->input->post('description'),
				'app_short_desc' => $this->input->post('short_desc'),
				'app_thumbnail' => $this->input->post('thumbnail'),
				'app_picture' => $this->input->post('picture'),
				'app_screen_1' => $this->input->post('screen_1'),
				'app_screen_2' => $this->input->post('screen_2'),
				'app_screen_3' => $this->input->post('screen_3')
			);
			$this->app_model->add_app($query_data);
			
			$this->session->set_flashdata('success', 'Application ajout&eacute;e !');
			
			// on regarde, il faut peut-être envoyer sur la page ajouter une promo
			if (isset($_POST['submit_app_and_add_promo']))
			{
			     redirect('promo/add/'.$this->input->post('store_id'));
			}
			else
			{
			     redirect('app');
			}  
		}
		else
		{
			$data['page'] = 'app/app_add_view';
			$this->load->view('container', $data);
			
			$this->session->keep_flashdata('data'); // si jamais l'user reload la page par exemple
		}
	}

	public function modify($id = -1)
	{
		$this->load->model('app_model');
		$data['oses'] = $this->_load_os(TRUE);
		
		if ($id == -1)
		{
			$id = $this->input->post('id');
		}
		
		// validation des données
		$this->form_validation->set_rules('os_id', 'ID OS', 'required|is_numeric');
		$this->form_validation->set_rules('store_id', 'ID du store', 'required');
		$this->form_validation->set_rules('link', 'Lien', 'required');
		$this->form_validation->set_rules('title', 'Nom', 'required|min_length[1]');
		$this->form_validation->set_rules('editor', 'Editeur', 'required');
		$this->form_validation->set_rules('version', 'Version', 'required');
		$this->form_validation->set_rules('price', 'Prix 3', 'required|is_numeric');
		$this->form_validation->set_rules('rating', 'Note', 'required|is_numeric');
		$this->form_validation->set_rules('rating_count', 'Nombre de votes', 'required|is_numeric');
		$this->form_validation->set_rules('description', 'Description', 'required|min_length[50]');
		$this->form_validation->set_rules('short_desc', 'Description courte', 'required');
		$this->form_validation->set_rules('thumbnail', 'Miniature', 'required|min_length[1]');
		$this->form_validation->set_rules('picture', 'Image', 'required|min_length[1]');
		$this->form_validation->set_rules('screen_1', 'Capture 1', 'required|min_length[1]');
		$this->form_validation->set_rules('screen_2', 'Capture 2', 'required');
		$this->form_validation->set_rules('screen_3', 'Capture 3', 'required');
		
		if ($this->form_validation->run() == TRUE)
		{
			$query_data = array(
				'app_os_id' => $this->input->post('os_id'),
				'app_store_id' => $this->input->post('store_id'),
				'app_link' => $this->input->post('link'),
				'app_title' => $this->input->post('title'),
				'app_editor' => $this->input->post('editor'),
				'app_version' => $this->input->post('version'),
				'app_price' => $this->input->post('price'),
				'app_rating' => $this->input->post('rating'),
				'app_rating_count' => $this->input->post('rating_count'),
				'app_description' => $this->input->post('description'),
				'app_short_desc' => $this->input->post('short_desc'),
				'app_thumbnail' => $this->input->post('thumbnail'),
				'app_picture' => $this->input->post('picture'),
				'app_screen_1' => $this->input->post('screen_1'),
				'app_screen_2' => $this->input->post('screen_2'),
				'app_screen_3' => $this->input->post('screen_3')
			);
			$this->app_model->modify_app($id, $query_data);
			
			$this->session->set_flashdata('success', 'Application modifi&eacute;e !');
			
			redirect('app');
		}
		else
		{
			$temp = $this->app_model->get_app($id);
			$data['os_id'] = $temp['app_os_id'];
			$data['store_id'] = $temp['app_store_id'];
			$data['link'] = $temp['app_link'];
			$data['title'] = $temp['app_title'];
			$data['editor'] = $temp['app_editor'];
			$data['version'] = $temp['app_version'];
			$data['price'] = $temp['app_price'];
			$data['rating'] = $temp['app_rating'];
			$data['rating_count'] = $temp['app_rating_count'];
			$data['description'] = $temp['app_description'];
			$data['short_desc'] = $temp['app_short_desc'];
			$data['thumbnail'] = $temp['app_thumbnail'];
			$data['picture'] = $temp['app_picture'];
			$data['screen_1'] = $temp['app_screen_1'];
			$data['screen_2'] = $temp['app_screen_2'];
			$data['screen_3'] = $temp['app_screen_3'];
			$data['id'] = $temp['app_id'];
						
			$data['page'] = 'app/app_modify_view';
			$this->load->view('container', $data);
		}	
	}
	
	/*
	 * Se connecte au store pour recharger certains infos
	 */
	public function refresh($id = -1)
	{
		
		$this->load->model('app_model');
		$data['oses'] = $this->_load_os(TRUE); // pour le drop-down de choix de l'os, on ne veut pas le choix 'all'
		
		if ($id == -1)
		{
			$id = $this->input->post('id');
		} else {
			// on va chercher les infos
			$temp = $this->app_model->get_app($id); // pré-requête pour l'os et le store id
			$data['os_id'] = $temp['app_os_id'];
			$data['store_id'] = $temp['app_store_id'];
			$data = $this->os_model->get_store_details($data);
			$data['id'] = $id; // ne pas oublier, pour passer l'info à la vue
		}
		
		// validation des données
		$this->form_validation->set_rules('os_id', 'ID OS', 'required|is_numeric');
		$this->form_validation->set_rules('store_id', 'ID du store', 'required');
		$this->form_validation->set_rules('title', 'Nom', 'required');
		$this->form_validation->set_rules('version', 'Version', 'required');
		$this->form_validation->set_rules('price', 'Prix 3', 'required|is_numeric');
		$this->form_validation->set_rules('rating', 'Note', 'required|is_numeric');
		$this->form_validation->set_rules('rating_count', 'Nombre de votes', 'required|is_numeric');
		
		if ($this->form_validation->run() == TRUE)
		{
			$query_data = array(
				'app_os_id' => $this->input->post('os_id'),
				'app_store_id' => $this->input->post('store_id'),
				'app_title' => $this->input->post('title'),
				'app_version' => $this->input->post('version'),
				'app_price' => $this->input->post('price'),
				'app_rating' => $this->input->post('rating'),
				'app_rating_count' => $this->input->post('rating_count')
			);
			$this->app_model->modify_app($id, $query_data);
			
			$this->session->set_flashdata('success', 'Application modifi&eacute;e !');
			
			redirect('app');
		}
		else
		{
			$data['page'] = 'app/app_refresh_view';
			$this->load->view('container', $data);
		}
	}
	
	public function delete($id)
	{
		$this->load->model('app_model');
		
		$this->app_model->delete_app($id);
		
		redirect('app');
	}
	
	/*
	 * Fonctions internes
	 */
	// pour charger le contenu du dropdown permettant de changer d'OS
	// @param : $no_all, bool, pas de clé tous
	private function _load_os($no_all = FALSE)
	{
		$this->load->model('os_model'); // nécessaire pour le drop-down
		
		$this->_os_selected = $this->session->userdata('os'); // on récupère le choix du menu déroulant
		
		$systems = $this->os_model->get_oses();
		($no_all !== TRUE) && ($data['oses'] = array('all' => 'Tous')); // on rajoute une clé 'tous'
		foreach ($systems as $system) {
			$data['oses'][$system['os_id']] = $system['os_nice_name'];
		}	
		
		return $data['oses'];
	}
}

/* EOF */